name: Terraform Deployment

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform changes
        run: terraform apply -auto-approve

      - name: Request approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Terraform Deployment Approval',
              head: context.sha,
              base: 'main',
              body: 'Please review and approve the Terraform deployment.',
            });
            core.setOutput('pull_request_number', pullRequest.number)

  approval:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Approve Terraform deployment
        uses: peter-evans/approval@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ needs.deploy.outputs.pull_request_number }}
          approval-context: 'Terraform Deployment'

      - name: Deploy Terraform changes
        if: ${{ needs.approval.outputs.approved == 'true' }}
        run: terraform apply -auto-approve
